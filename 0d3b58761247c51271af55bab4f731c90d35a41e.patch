From 0d3b58761247c51271af55bab4f731c90d35a41e Mon Sep 17 00:00:00 2001
From: Fabio Valentini <decathorpe@gmail.com>
Date: Thu, 3 Sep 2020 12:43:44 +0200
Subject: [PATCH] glade: add conditional support for gladeui >= 3.37

See: https://gitlab.gnome.org/GNOME/glade/-/commit/bb626dd

Fixes: #335
---
 glade/glade-hdy-carousel.c           | 37 +++++++++++++++++++
 glade/glade-hdy-expander-row.c       | 16 +++++++++
 glade/glade-hdy-header-bar.c         | 53 ++++++++++++++++++++++++++++
 glade/glade-hdy-header-group.c       | 13 +++++++
 glade/glade-hdy-leaflet.c            | 36 +++++++++++++++++++
 glade/glade-hdy-preferences-page.c   | 22 ++++++++++++
 glade/glade-hdy-preferences-window.c | 22 ++++++++++++
 glade/glade-hdy-swipe-group.c        | 13 +++++++
 meson.build                          |  4 +++
 9 files changed, 216 insertions(+)

diff --git a/glade/glade-hdy-carousel.c b/glade/glade-hdy-carousel.c
index c06a4e43..614fe50c 100644
--- a/glade/glade-hdy-carousel.c
+++ b/glade/glade-hdy-carousel.c
@@ -203,10 +203,17 @@ glade_hdy_carousel_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+                                                                                        container,
+                                                                                        object,
+                                                                                        action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
+#endif
 }
 
 static void
@@ -266,7 +273,11 @@ glade_hdy_carousel_set_property (GladeWidgetAdaptor *adaptor,
   else if (!strcmp (id, "page"))
     set_page (object, value);
   else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#endif
   }
 }
 
@@ -283,7 +294,11 @@ glade_hdy_carousel_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, hdy_carousel_get_page (HDY_CAROUSEL (object)));
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#endif
   }
 }
 
@@ -321,9 +336,15 @@ glade_hdy_carousel_verify_property (GladeWidgetAdaptor *adaptor,
     return glade_hdy_carousel_verify_n_pages (object, value);
   else if (!strcmp (id, "page"))
     return glade_hdy_carousel_verify_page (object, value);
+#ifdef HAVE_GLADEUI_337
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object,
+                                                                                         id, value);
+#else
   else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
     return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object,
                                                                 id, value);
+#endif
 
   return TRUE;
 }
@@ -430,11 +451,19 @@ glade_hdy_carousel_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
 }
 
 void
@@ -451,10 +480,18 @@ glade_hdy_carousel_set_child_property (GladeWidgetAdaptor *adaptor,
 
     glade_hdy_sync_child_positions (GTK_CONTAINER (container));
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
diff --git a/glade/glade-hdy-expander-row.c b/glade/glade-hdy-expander-row.c
index d1a2ccc0..6137cdd6 100644
--- a/glade/glade-hdy-expander-row.c
+++ b/glade/glade-hdy-expander-row.c
@@ -35,11 +35,19 @@ glade_hdy_expander_row_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
 }
 
 void
@@ -54,11 +62,19 @@ glade_hdy_expander_row_set_child_property (GladeWidgetAdaptor *adaptor,
                              GTK_WIDGET (child),
                              g_value_get_int (value));
   else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
 }
 
 void
diff --git a/glade/glade-hdy-header-bar.c b/glade/glade-hdy-header-bar.c
index 12b7afe0..65cf430f 100644
--- a/glade/glade-hdy-header-bar.c
+++ b/glade/glade-hdy-header-bar.c
@@ -124,9 +124,15 @@ glade_hdy_header_bar_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+                                                                                  object,
+                                                                                  action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
+#endif
   }
 }
 
@@ -159,10 +165,17 @@ glade_hdy_header_bar_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+                                                                                        container,
+                                                                                        object,
+                                                                                        action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
+#endif
   }
 }
 
@@ -179,7 +192,11 @@ glade_hdy_header_bar_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, get_n_children (object));
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#endif
   }
 }
 
@@ -291,7 +308,11 @@ glade_hdy_header_bar_set_property (GladeWidgetAdaptor *adaptor,
   } else if (!strcmp (id, "size")) {
     set_size (object, value);
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#endif
   }
 }
 
@@ -316,7 +337,11 @@ glade_hdy_header_bar_add_child (GladeWidgetAdaptor *adaptor,
     return;
   }
 
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->add (adaptor, parent, child);
+#else
   GWA_GET_CLASS (GTK_TYPE_CONTAINER)->add (adaptor, parent, child);
+#endif
 
   gbox = glade_widget_get_from_gobject (parent);
   if (!glade_widget_superuser ()) {
@@ -380,10 +405,17 @@ glade_hdy_header_bar_replace_child (GladeWidgetAdaptor *adaptor,
 
   g_object_set_data (G_OBJECT (new_widget), "special-child-type", NULL);
 
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->replace_child (adaptor,
+                                                                              container,
+                                                                              current,
+                                                                              new_widget);
+#else
   GWA_GET_CLASS (GTK_TYPE_CONTAINER)->replace_child (adaptor,
                                                      container,
                                                      current,
                                                      new_widget);
+#endif
 
   gbox = glade_widget_get_from_gobject (container);
   if (!glade_widget_superuser ()) {
@@ -400,11 +432,20 @@ glade_hdy_header_bar_verify_property (GladeWidgetAdaptor *adaptor,
 {
   if (!strcmp (id, "size"))
     return verify_size (object, value);
+
+#ifdef HAVE_GLADEUI_337
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor,
+                                                                                         object,
+                                                                                         id,
+                                                                                         value);
+#else
   else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
     return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor,
                                                                 object,
                                                                 id,
                                                                 value);
+#endif
 
   return TRUE;
 }
@@ -446,7 +487,11 @@ GList *
 glade_hdy_header_bar_get_children (GladeWidgetAdaptor *adaptor,
                                    GObject            *container)
 {
+#ifdef HAVE_GLADEUI_337
+  GList *children = GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_children (adaptor, container);
+#else
   GList *children = GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_children (adaptor, container);
+#endif
 
   return g_list_sort_with_data (children, (GCompareDataFunc) sort_children, container);
 }
@@ -539,9 +584,17 @@ glade_hdy_header_bar_child_set_property (GladeWidgetAdaptor *adaptor,
 
   /* Chain Up */
   if (!is_position)
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
 }
diff --git a/glade/glade-hdy-header-group.c b/glade/glade-hdy-header-group.c
index 3ef633e6..52bef54b 100644
--- a/glade/glade-hdy-header-group.c
+++ b/glade/glade-hdy-header-group.c
@@ -76,7 +76,11 @@ glade_hdy_header_group_read_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+#else
   GWA_GET_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+#endif
 
   glade_hdy_header_group_read_widgets (widget, node);
 }
@@ -122,7 +126,11 @@ glade_hdy_header_group_write_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+#else
   GWA_GET_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+#endif
 
   glade_hdy_header_group_write_widgets (widget, context, node);
 }
@@ -156,7 +164,12 @@ glade_hdy_header_group_set_property (GladeWidgetAdaptor *adaptor,
                                          HDY_HEADER_BAR (list->data));
     }
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
+                                                                          property_name, value);
+#else
     GWA_GET_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
                                                  property_name, value);
+#endif
   }
 }
diff --git a/glade/glade-hdy-leaflet.c b/glade/glade-hdy-leaflet.c
index 4032f9f2..b4ad2af7 100644
--- a/glade/glade-hdy-leaflet.c
+++ b/glade/glade-hdy-leaflet.c
@@ -227,10 +227,17 @@ glade_hdy_leaflet_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+                                                                                        container,
+                                                                                        object,
+                                                                                        action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
+#endif
   }
 }
 
@@ -332,7 +339,11 @@ glade_hdy_leaflet_set_property (GladeWidgetAdaptor *adaptor,
   else if (!strcmp (id, "page"))
     set_page (object, value);
   else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+#endif
 }
 
 void
@@ -348,7 +359,11 @@ glade_hdy_leaflet_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, get_page (GTK_CONTAINER (object)));
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+#endif
   }
 }
 
@@ -397,8 +412,13 @@ glade_hdy_leaflet_verify_property (GladeWidgetAdaptor *adaptor,
     return verify_n_pages (object, value);
   else if (!strcmp (id, "page"))
     return verify_page (object, value);
+#ifdef HAVE_GLADEUI_337
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object, id, value);
+#else
   else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
     return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object, id, value);
+#endif
 
   return TRUE;
 }
@@ -415,11 +435,19 @@ glade_hdy_leaflet_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
 }
 
 void
@@ -436,11 +464,19 @@ glade_hdy_leaflet_set_child_property (GladeWidgetAdaptor *adaptor,
 
     glade_hdy_sync_child_positions (GTK_CONTAINER (container));
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
 
diff --git a/glade/glade-hdy-preferences-page.c b/glade/glade-hdy-preferences-page.c
index f1a62c7e..c6b96890 100644
--- a/glade/glade-hdy-preferences-page.c
+++ b/glade/glade-hdy-preferences-page.c
@@ -169,9 +169,15 @@ glade_hdy_preferences_page_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+                                                                                  object,
+                                                                                  action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
+#endif
   }
 }
 
@@ -188,11 +194,19 @@ glade_hdy_preferences_page_child_set_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_set_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
 
@@ -209,10 +223,18 @@ glade_hdy_preferences_page_child_get_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_get_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
diff --git a/glade/glade-hdy-preferences-window.c b/glade/glade-hdy-preferences-window.c
index 1add3690..90fd3167 100644
--- a/glade/glade-hdy-preferences-window.c
+++ b/glade/glade-hdy-preferences-window.c
@@ -237,9 +237,15 @@ glade_hdy_preferences_window_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+                                                                                  object,
+                                                                                  action_path);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
+#endif
   }
 }
 
@@ -256,11 +262,19 @@ glade_hdy_preferences_window_child_set_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_set_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
 
@@ -277,10 +291,18 @@ glade_hdy_preferences_window_child_get_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_get_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+                                                                                     container,
+                                                                                     child,
+                                                                                     property_name,
+                                                                                     value);
+#else
     GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
                                                             value);
+#endif
   }
 }
diff --git a/glade/glade-hdy-swipe-group.c b/glade/glade-hdy-swipe-group.c
index 059138dd..308bad6e 100644
--- a/glade/glade-hdy-swipe-group.c
+++ b/glade/glade-hdy-swipe-group.c
@@ -78,7 +78,11 @@ glade_hdy_swipe_group_read_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+#else
   GWA_GET_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+#endif
 
   glade_hdy_swipe_group_read_widgets (widget, node);
 }
@@ -122,7 +126,11 @@ glade_hdy_swipe_group_write_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
+#ifdef HAVE_GLADEUI_337
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+#else
   GWA_GET_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+#endif
 
   glade_hdy_swipe_group_write_widgets (widget, context, node);
 }
@@ -155,7 +163,12 @@ glade_hdy_swipe_group_set_property (GladeWidgetAdaptor *adaptor,
                                        HDY_SWIPEABLE (list->data));
     }
   } else {
+#ifdef HAVE_GLADEUI_337
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
+                                                                          property_name, value);
+#else
     GWA_GET_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
                                                  property_name, value);
+#endif
   }
 }
diff --git a/meson.build b/meson.build
index c920313b..05b9ccca 100644
--- a/meson.build
+++ b/meson.build
@@ -117,6 +117,10 @@ glade_catalog_feature = get_option('glade_catalog')
 gladeui_dep = dependency('gladeui-2.0', required : glade_catalog_feature)
 glade_catalog = not glade_catalog_feature.disabled() and gladeui_dep.found()
 
+if gladeui_dep.version().version_compare('>=3.37')
+    add_project_arguments('-DHAVE_GLADEUI_337', language: 'c')
+endif
+
 introspection_feature = get_option('introspection')
 introspection = introspection_feature.enabled() or introspection_feature.auto()
 
-- 
GitLab

